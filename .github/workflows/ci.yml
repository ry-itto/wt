name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run typecheck
      
    - name: Run linting
      run: npm run lint
      
    - name: Build project
      run: npm run build
      
    - name: Run unit tests
      run: npm run test:unit
      
    - name: Run E2E tests
      run: npm run test:e2e
      
    - name: Test global installation
      run: |
        npm pack
        npm install --global ./ry-itto-wt-*.tgz
        wt --version
        npm uninstall --global @ry-itto/wt

  shell-tests:
    name: Shell E2E Tests on ${{ matrix.os }} with ${{ matrix.shell }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        shell: [bash, zsh]
        exclude:
          # zsh is not available by default on ubuntu runners
          - os: ubuntu-latest
            shell: zsh
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Install test dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        # Install fzf
        sudo apt-get update
        sudo apt-get install -y fzf
        
        # Install ghq
        curl -sSL https://github.com/x-motemen/ghq/releases/latest/download/ghq_linux_amd64.tar.gz | sudo tar -xz -C /usr/local/bin ghq
        
    - name: Install test dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # Install fzf
        brew install fzf
        
        # Install ghq
        brew install ghq
        
    - name: Run shell E2E tests
      run: |
        export CI=true
        if [[ "${{ matrix.shell }}" == "zsh" ]]; then
          # For zsh, ensure we're in the right directory
          cd $GITHUB_WORKSPACE
        fi
        ${{ matrix.shell }} tests/e2e-shell/run-all-tests.sh
      
    - name: Upload test logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: shell-test-logs-${{ matrix.os }}-${{ matrix.shell }}
        path: tests/e2e-shell/test-output-*.log
      
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run dependency check
      uses: actions/dependency-review-action@v4
      if: github.event_name == 'pull_request'
